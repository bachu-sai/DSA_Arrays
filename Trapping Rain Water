def trappingWater(self, arr,n):
        #Code here
        w=0
        left=[0]*n
        right=[0]*n
        left[0]=arr[0]
        for i in range(1,n):
            left[i]=max(left[i-1],arr[i])
        right[n-1]=arr[n-1]
        for i in range(n-2,-1,-1):
            right[i]=max(right[i+1],arr[i])
        for i in range(0,n):
            w=w+(min(left[i],right[i])-arr[i])
        return w
        
        
        
        ---------------------------------------------------------------------------
        
        
        
        
        int trappingWater(int arr[], int n){
        // Code here
        int t=0;
        for(int i=1;i<=n-2;i++)
        {
            int l_max=find_l(arr,n,i);
            int r_max=find_r(arr,n,i);
            t = t + min(l_max,r_max) - arr[i]; 
            
        }
        return t;
        
    }
    int find_l(int arr[],int n,int i)
    {
        int maxi=0;
        for(int j=0;j<=i;j++)
        {
            maxi=max(maxi,arr[j]);
        }
        return maxi;
    }
     int find_r(int arr[],int n,int i)
    {
        int maxi=0;
        for(int j=n-1;j>=i;j--)
        {
            maxi=max(maxi,arr[j]);
        }
        return maxi;
    }
            
            
